events{}

http{

    upstream servers{
        server go-orm_go-orm_1:5000;
        server go-orm_go-orm_2:5000;
        server go-orm_go-orm_3:5000;
    }

    server{
        listen 80;

        location / {
            return 301 https://0.0.0.0$request_uri;
        }
    }

    server {
        listen 443 ssl;
        # create ssl cert and cert key by invoking this command in terminal:
        # openssl req -x509 -days 10 -nodes -newkey rsa:2048 -keyout /etc/nginx/ssl/self.key -out /etc/nginx/ssl/self.crt
        ssl_certificate /etc/nginx/self.crt; #provide ssl certificate
        ssl_certificate_key /etc/nginx/self.key; #provide ssl certificate key
        # using TLS (transport layer security), instead of SSL
        # there is alot going on, but for practical purpose it is just configuration
        # however, if you have time, deep dive to it
        # set ssl_protocol to tls
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
        # turn on server chipers
        ssl_prefer_server_ciphers on; 
        # set chipers suite, try to know how to generate it
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5; 
        # specify dhparam, create dhparam by command line "openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048"
        # 2048 in above syntx must match ssl certificate command part "rsa:2048"
        ssl_dhparam /etc/nginx/dhparam.pem;
        # enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;
        # SSL sessions
        ssl_session_cache shared:SSL:40m;
        ssl_session_timeout 4h;
        ssl_session_tickets on;

        server_name 0.0.0.0;

        location / {
            proxy_pass http://servers;
        }
    }
}